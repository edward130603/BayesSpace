% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatialPlot.R
\name{spatialPlot}
\alias{spatialPlot}
\alias{clusterPlot}
\title{Plot spot labels or features in spatial context.}
\usage{
clusterPlot(
  sce,
  fill = "spatial.cluster",
  palette = NULL,
  color = NULL,
  platform = NULL,
  is.enhanced = NULL,
  ...
)
}
\arguments{
\item{sce}{SingleCellExperiment containing cluster assignments in
\code{sce$spatial.cluster}}

\item{fill}{Name of a column in \code{colData(sce)} or a vector of values to
use as fill for each spot}

\item{palette}{Optional vector of hex codes to use for discrete spot values}

\item{color}{Optional hex code to set color of borders around spots. Set to
\code{NA} to remove borders.}

\item{platform}{Spatial sequencing platform. If "Visium", the hex spot layout
will be used, otherwise square spots will be plotted. (NOTE: specifying
this argument is only necessary if \code{sce} was not created by
\code{spatialCluster()} or \code{spatialEnhance()}.)}

\item{is.enhanced}{True if \code{sce} contains subspot-level data instead of
spots. Spatial sequencing platform. If true, the respective subspot lattice
for each platform will be plotted. (NOTE: specifying this argument is only
necessary if \code{sce} was not created by \code{spatialCluster()} or
\code{spatialEnhance()}.)}

\item{...}{Additional arguments for \code{geom_polygon()}. \code{size}, to
specify the linewidth of these borders, is likely the most useful.}
}
\value{
Both functions return a \code{ggplot} object.
}
\description{
After running \code{spatialCluster()} or \code{spatialEnhance()}, we can
visualize the cluster assignments of each spot using \code{clusterPlot()} or
\code{enhancePlot()}, respectively.
}
\examples{
set.seed(149)
sce <- exampleSCE()
sce$spatial.cluster <- floor(runif(ncol(sce), 1, 4))
clusterPlot(sce)

}
