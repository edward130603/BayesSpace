% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enhanceFeatures.R
\name{enhanceFeatures}
\alias{enhanceFeatures}
\title{Predict feature vectors from deconvolved PCs.}
\usage{
enhanceFeatures(
  sce.enhanced,
  sce.ref,
  use.dimred = "PCA",
  assay.type = "logcounts",
  altExp.type = NULL,
  feature.matrix = NULL,
  feature_names = NULL,
  model = c("xgboost", "dirichlet", "lm")
)
}
\arguments{
\item{sce.enhanced}{SingleCellExperiment object with enhanced PCs.}

\item{sce.ref}{SingleCellExperiment object with original PCs and expression..}

\item{use.dimred}{Name of dimension reduction to use.}

\item{assay.type}{Expression matrix in \code{assays(sce.ref)} to predict.}

\item{altExp.type}{Expression matrix in \code{altExps(sce.ref)} to predict.
Overrides \code{assay.type} if specified.}

\item{feature.matrix}{Expression/feature matrix to predict, if not directly
attached to \code{sce.ref}. Must have columns corresponding to the spots in
\code{sce.ref}. Overrides \code{assay.type} and \code{altExp.type} if
specified.}

\item{feature_names}{List of genes/features to predict expression/values for.}

\item{model}{Model used to predict enhanced values.}
}
\value{
If \code{assay.type} or \code{altExp.type} are specified, the
  enhanced features are stored in the corresponding slot of
  \code{sce.enhanced} and the modified SingleCellExperiment object is
  returned.
  
  If \code{feature.matrix} is specified, or if a subset of features are
  requested, the enhanced features are returned directly as a matrix.
}
\description{
Predict feature vectors from deconvolved PCs.
}
\details{
Enhanced features are computed by fitting a predictive model to a
low-dimensional representation of the original expression vectors. By
default, a linear model is fit for each gene using the top 15 principal
compoenents from each spot, i.e. \code{lm(gene ~ PCs)}, and the fitted model
is used to predict the enhanced expression for each gene from the subspots'
principal components.

Note that feature matrices will be returned and are expected to be input as
\eqn{p \times n} matrices of \eqn{p}-dimensional feature vectors over the
\eqn{n} spots.
}
\examples{
set.seed(149)
sce <- exampleSCE()
sce <- spatialCluster(sce, 7, nrep=200)
enhanced <- spatialEnhance(sce, 7, init=sce$spatial.cluster, nrep=200)
enhanced <- enhanceFeatures(enhanced, sce, assay.type="logcounts")

}
